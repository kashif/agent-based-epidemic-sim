// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package abesim;

import "agent_based_epidemic_sim/agent_synthesis/population_profile.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

// Configures a TracingPolicy that defines test, trace, and isolation
// parameters.
message TracingPolicyProto {
  // The duration for which test results are valid (e.g., a negative).
  // May serve as a buffering between test requests.
  google.protobuf.Duration test_validity_duration = 1;
  // The duration to retain contacts.
  google.protobuf.Duration contact_retention_duration = 2;
  // The duration to remain quarantined following the latest positive contact.
  google.protobuf.Duration quarantine_duration = 3;
  // The latency in receiving a test result.
  // May be generalized in the future to account for randomness, different test
  // types.
  google.protobuf.Duration test_latency = 4;
}

message InfectiousnessLevel {
  enum Level {
    UNKNOWN = 0;
    NONE = 1;
    STANDARD = 2;
    HIGH = 3;
  }
}

// Each exposure has a series of one or more attenuation:duration pairs.
// Each pair is discretized using the appropriate BLEBucket.max_threshold and
// the corresponding weight is used by the model.
message BLEBucket {
  float max_threshold = 1;
  float weight = 2;
}

// A min and max bound, mapping days since symptom onset to a particular
// infectiousness level and model weight. Min and max bounds are required
// because buckets can be nested in nature.
message InfectiousnessBucket {
  InfectiousnessLevel.Level level = 1;
  float weight = 2;
  int64 days_since_symptom_onset_min = 3;
  int64 days_since_symptom_onset_max = 4;
}

// Weights used in the risk score model.
message LearningRiskScoreModelProto {
  // Overall scaling factor for risk score. This scales the product of duration
  // and infection scores.
  float risk_scale_factor = 1;

  // Buckets representing threshold and corresponding weight of ble attenuation
  // signals.
  repeated BLEBucket ble_buckets = 2;

  // Buckets representing days_since_symptom onset and a mapping to a
  // corresponding infectiousness level and model weight.
  repeated InfectiousnessBucket infectiousness_buckets = 3;

  // The number of days of exosure history to use when determining whether to
  // quarantine, test and other policy actions.
  int64 exposure_notification_window_days = 4;
}

// Top level configuration for the risk learning simulation.
message RiskLearningSimulationConfig {
  repeated string agent_file = 1;
  repeated string location_file = 2;

  google.protobuf.Timestamp init_time = 3;
  google.protobuf.Duration step_size = 4;
  int32 steps = 5;

  string summary_filename = 12;
  string learning_filename = 13;

  TracingPolicyProto tracing_policy = 6;
  repeated PopulationProfile profiles = 7;
  // Changepoints are the time varying parameters used to set the infectivity
  // of work and random locations.
  repeated float changepoints = 8;
  // Number of infections that exist at the beginning of the simulation.
  float n_seed_infections = 9;

  LearningRiskScoreModelProto risk_score_model = 10;

  // The fraction of edges from the workplace network that should be sampled
  // every day.
  float daily_fraction_work = 11;
}
